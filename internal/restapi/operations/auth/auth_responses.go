// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/andreipimenov/golang-training-2021/internal/models"
)

// AuthOKCode is the HTTP code returned for type AuthOK
const AuthOKCode int = 200

/*AuthOK Returns access and refresh tokens

swagger:response authOK
*/
type AuthOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tokens `json:"body,omitempty"`
}

// NewAuthOK creates AuthOK with default headers values
func NewAuthOK() *AuthOK {

	return &AuthOK{}
}

// WithPayload adds the payload to the auth o k response
func (o *AuthOK) WithPayload(payload *models.Tokens) *AuthOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth o k response
func (o *AuthOK) SetPayload(payload *models.Tokens) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthBadRequestCode is the HTTP code returned for type AuthBadRequest
const AuthBadRequestCode int = 400

/*AuthBadRequest Bad Request

swagger:response authBadRequest
*/
type AuthBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAuthBadRequest creates AuthBadRequest with default headers values
func NewAuthBadRequest() *AuthBadRequest {

	return &AuthBadRequest{}
}

// WithPayload adds the payload to the auth bad request response
func (o *AuthBadRequest) WithPayload(payload *models.Error) *AuthBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth bad request response
func (o *AuthBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthForbiddenCode is the HTTP code returned for type AuthForbidden
const AuthForbiddenCode int = 403

/*AuthForbidden Forbidden

swagger:response authForbidden
*/
type AuthForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAuthForbidden creates AuthForbidden with default headers values
func NewAuthForbidden() *AuthForbidden {

	return &AuthForbidden{}
}

// WithPayload adds the payload to the auth forbidden response
func (o *AuthForbidden) WithPayload(payload *models.Error) *AuthForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth forbidden response
func (o *AuthForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
