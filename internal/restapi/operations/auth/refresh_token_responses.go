// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/andreipimenov/golang-training-2021/internal/models"
)

// RefreshTokenOKCode is the HTTP code returned for type RefreshTokenOK
const RefreshTokenOKCode int = 200

/*RefreshTokenOK Returns new access and refresh tokens

swagger:response refreshTokenOK
*/
type RefreshTokenOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tokens `json:"body,omitempty"`
}

// NewRefreshTokenOK creates RefreshTokenOK with default headers values
func NewRefreshTokenOK() *RefreshTokenOK {

	return &RefreshTokenOK{}
}

// WithPayload adds the payload to the refresh token o k response
func (o *RefreshTokenOK) WithPayload(payload *models.Tokens) *RefreshTokenOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refresh token o k response
func (o *RefreshTokenOK) SetPayload(payload *models.Tokens) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefreshTokenOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RefreshTokenBadRequestCode is the HTTP code returned for type RefreshTokenBadRequest
const RefreshTokenBadRequestCode int = 400

/*RefreshTokenBadRequest Bad Request

swagger:response refreshTokenBadRequest
*/
type RefreshTokenBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRefreshTokenBadRequest creates RefreshTokenBadRequest with default headers values
func NewRefreshTokenBadRequest() *RefreshTokenBadRequest {

	return &RefreshTokenBadRequest{}
}

// WithPayload adds the payload to the refresh token bad request response
func (o *RefreshTokenBadRequest) WithPayload(payload *models.Error) *RefreshTokenBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refresh token bad request response
func (o *RefreshTokenBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefreshTokenBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RefreshTokenForbiddenCode is the HTTP code returned for type RefreshTokenForbidden
const RefreshTokenForbiddenCode int = 403

/*RefreshTokenForbidden Forbidden

swagger:response refreshTokenForbidden
*/
type RefreshTokenForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRefreshTokenForbidden creates RefreshTokenForbidden with default headers values
func NewRefreshTokenForbidden() *RefreshTokenForbidden {

	return &RefreshTokenForbidden{}
}

// WithPayload adds the payload to the refresh token forbidden response
func (o *RefreshTokenForbidden) WithPayload(payload *models.Error) *RefreshTokenForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refresh token forbidden response
func (o *RefreshTokenForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefreshTokenForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
