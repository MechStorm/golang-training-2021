// Code generated by go-swagger; DO NOT EDIT.

package stock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/andreipimenov/golang-training-2021/internal/models"
)

// GetPriceOKCode is the HTTP code returned for type GetPriceOK
const GetPriceOKCode int = 200

/*GetPriceOK Stock price

swagger:response getPriceOK
*/
type GetPriceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Price `json:"body,omitempty"`
}

// NewGetPriceOK creates GetPriceOK with default headers values
func NewGetPriceOK() *GetPriceOK {

	return &GetPriceOK{}
}

// WithPayload adds the payload to the get price o k response
func (o *GetPriceOK) WithPayload(payload *models.Price) *GetPriceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get price o k response
func (o *GetPriceOK) SetPayload(payload *models.Price) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPriceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPriceBadRequestCode is the HTTP code returned for type GetPriceBadRequest
const GetPriceBadRequestCode int = 400

/*GetPriceBadRequest Bad Request

swagger:response getPriceBadRequest
*/
type GetPriceBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPriceBadRequest creates GetPriceBadRequest with default headers values
func NewGetPriceBadRequest() *GetPriceBadRequest {

	return &GetPriceBadRequest{}
}

// WithPayload adds the payload to the get price bad request response
func (o *GetPriceBadRequest) WithPayload(payload *models.Error) *GetPriceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get price bad request response
func (o *GetPriceBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPriceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPriceUnauthorizedCode is the HTTP code returned for type GetPriceUnauthorized
const GetPriceUnauthorizedCode int = 401

/*GetPriceUnauthorized Unauthorized

swagger:response getPriceUnauthorized
*/
type GetPriceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPriceUnauthorized creates GetPriceUnauthorized with default headers values
func NewGetPriceUnauthorized() *GetPriceUnauthorized {

	return &GetPriceUnauthorized{}
}

// WithPayload adds the payload to the get price unauthorized response
func (o *GetPriceUnauthorized) WithPayload(payload *models.Error) *GetPriceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get price unauthorized response
func (o *GetPriceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPriceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPriceInternalServerErrorCode is the HTTP code returned for type GetPriceInternalServerError
const GetPriceInternalServerErrorCode int = 500

/*GetPriceInternalServerError Internal Server Error

swagger:response getPriceInternalServerError
*/
type GetPriceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPriceInternalServerError creates GetPriceInternalServerError with default headers values
func NewGetPriceInternalServerError() *GetPriceInternalServerError {

	return &GetPriceInternalServerError{}
}

// WithPayload adds the payload to the get price internal server error response
func (o *GetPriceInternalServerError) WithPayload(payload *models.Error) *GetPriceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get price internal server error response
func (o *GetPriceInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPriceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
