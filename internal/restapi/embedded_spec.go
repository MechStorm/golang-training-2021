// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service which provides stock prices' historical data",
    "title": "Stock Service",
    "version": "0.1.0"
  },
  "basePath": "/",
  "paths": {
    "/auth": {
      "post": {
        "description": "Authenticate user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "auth",
        "operationId": "auth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/price/{ticker}/{date}": {
      "get": {
        "description": "Get stock price",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stock"
        ],
        "summary": "getPrice",
        "operationId": "getPrice",
        "parameters": [
          {
            "type": "string",
            "description": "Stock's code",
            "name": "ticker",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date in format YYYY-MM-DD",
            "name": "date",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Stock price",
            "schema": {
              "$ref": "#/definitions/Price"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "description": "Refresh access and refresh tokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "refreshToken",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns new access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Credentials": {
      "description": "User's credentials info",
      "type": "object",
      "title": "Credentials",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Price": {
      "description": "Information about stock's price",
      "type": "object",
      "title": "Price",
      "properties": {
        "close": {
          "type": "string"
        },
        "high": {
          "type": "string"
        },
        "low": {
          "type": "string"
        },
        "open": {
          "type": "string"
        }
      }
    },
    "Tokens": {
      "description": "Information about tokens",
      "type": "object",
      "title": "Tokens",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "stock"
    },
    {
      "name": "auth"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Service which provides stock prices' historical data",
    "title": "Stock Service",
    "version": "0.1.0"
  },
  "basePath": "/",
  "paths": {
    "/auth": {
      "post": {
        "description": "Authenticate user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "auth",
        "operationId": "auth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/price/{ticker}/{date}": {
      "get": {
        "description": "Get stock price",
        "produces": [
          "application/json"
        ],
        "tags": [
          "stock"
        ],
        "summary": "getPrice",
        "operationId": "getPrice",
        "parameters": [
          {
            "type": "string",
            "description": "Stock's code",
            "name": "ticker",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Date in format YYYY-MM-DD",
            "name": "date",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Stock price",
            "schema": {
              "$ref": "#/definitions/Price"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "description": "Refresh access and refresh tokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "refreshToken",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns new access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Credentials": {
      "description": "User's credentials info",
      "type": "object",
      "title": "Credentials",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "title": "Error",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Price": {
      "description": "Information about stock's price",
      "type": "object",
      "title": "Price",
      "properties": {
        "close": {
          "type": "string"
        },
        "high": {
          "type": "string"
        },
        "low": {
          "type": "string"
        },
        "open": {
          "type": "string"
        }
      }
    },
    "Tokens": {
      "description": "Information about tokens",
      "type": "object",
      "title": "Tokens",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "stock"
    },
    {
      "name": "auth"
    }
  ]
}`))
}
